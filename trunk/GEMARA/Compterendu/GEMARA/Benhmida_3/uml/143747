format 212
"Partie_TEST_Bluetooth" // code::SALF_PI::Partie_TEST_Bluetooth
  revision 1
  modified_by 3 "camelia"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "/home/camelia/workspace/Compterendu/GEMARA/Benhmida/code/SALF_PI/Partie_TEST_Bluetooth/"
  cpp_src_dir "/home/camelia/workspace/Compterendu/GEMARA/Benhmida/code/SALF_PI/Partie_TEST_Bluetooth/"
  classview 142083 "Partie_TEST_Bluetooth"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 205955 "BluetoothServer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "\\class BluetoothServer
\\brief represente un BluetoothServer 
\\author Benhmida
\\version $Rev: 590 $
\\date $Date: 2017-04-17 23:07:09 +0200 (lun. 17 avril 2017) $
"
      attribute 168707 "loc_addr"
	private explicit_type "sockaddr_rc"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 168835 "rem_addr"
	private explicit_type "sockaddr_rc"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 168963 "buf"
	private explicit_type "char"
	multiplicity "[MAX_BUFFER_SIZE]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 169091 "s"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 169219 "client"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 169347 "bytes_read"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 169475 "opt"
	private explicit_type "socklen_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 169603 "serverMacAddress"
	private explicit_type "string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 165251 "BluetoothServer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "serverMacAddress" explicit_type "string"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "\\fn    BluetoothServer();
\\brief constructeur permettant d'instancier les attributs
"
      end

      operation 165379 "~BluetoothServer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
			close(client);
			close(s);
		};
"
	
	
	
	
      end

      operation 165507 "launch"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 165635 "readData"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 165763 "writeData"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "toSend" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 206083 "BluetoothBny"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "\\enum BluetoothBnyConfig
\\brief Enum contenant les pins gpio de chaque boutons du boitier SALF
$Author: Benhmida$
$Rev: 597 $
$Date: 2017-04-24 23:17:55 +0200 (lun. 24 avril 2017) $
"
      attribute 168067 "BUTTONS"
	public type class_ref 206083 // BluetoothBny
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 168195 "DISPLAY"
	public type class_ref 206083 // BluetoothBny
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 168323 "LEDS"
	public type class_ref 206083 // BluetoothBny
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 168451 "KLAXON"
	public type class_ref 206083 // BluetoothBny
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 168579 "SPEAKERS"
	public type class_ref 206083 // BluetoothBny
	init_value " 4			
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end
  end

  deploymentview 142083 "Partie_TEST_Bluetooth"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 165763 "BluetoothBnyConfig"
      stereotype "source"
      cpp_h "/**
* \\file ${name}.h
* $Author: BENHMIDA$
* $Rev$
* $Date$

\\brief Projet : GEMARA
*******************************************************/
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "/*****************************************************
* \\file ${name}.cpp
* $Author: BENHMIDA$
* $Rev$
* $Date$

\\brief Projet : GEMARA
*******************************************************/
${comment}
${includes}
${namespace_start}
${members}
${namespace_end}

#ifndef NDEBUG
/*
compléter la ligne de commande de génération pour le test unitaire
g++ -o ${name}Ut ${name}.cpp -std=c++11 -D _${name}_UT_ .....
ou
g++ -o ${name}Ut ${name}.cpp -std=c++11 -D _CLASSE_ABSTRAITE_ -D _${name}_UT_ .....

commande de compilation générant le fichier objet

g++ -c ${name}.cpp  -std=c++11 -D NDEBUG 
*/
#include <assert.h>
#ifdef _${name}_UT_
  #ifdef _CLASSE_ABSTRAITE_
    class Test: public ${namespace}::${name}{
      public:
        Test(parametres):${name}(parametres){} 
       //définir toutes les méthodes abstraites (i.e. =0) avec un corps vide
     };
 #endif // _CLASSE_ABSTRAITE_
int main(int argc, char** argv){
  #ifdef _CLASSE_ABSTRAITE_
   ${namespace}::${name}* ptrInstance =new Test(parametres);
  type valeur=?????;
  ptrInstance->setAttr1(valeur);
  assert(ptrInstance->getAttr1() == valeur);
 #else
  //instanciation de la classe à tester
  ${namespace}::${name} instance(parametres);
  //test de chaque méthode ; ici les accesseurs et mutateurs
  type valeur=?????;
  instance.setAttr1(valeur);
  assert(instance.getAttr1() == valeur);
 #endif // _CLASSE_ABSTRAITE_
}
#endif
#endif"
      associated_classes
	class_ref 206083 // BluetoothBny
      end
    end

    artifact 165891 "BluetoothServer"
      stereotype "source"
      cpp_h "/**
* \\file ${name}.h
* $Author: BENHMIDA$
* $Rev$
* $Date$

\\brief Projet : GEMARA
*******************************************************/
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "/*****************************************************
* \\file ${name}.cpp
* $Author: BENHMIDA$
* $Rev$
* $Date$

\\brief Projet : GEMARA
*******************************************************/
${comment}
${includes}
${namespace_start}
${members}
${namespace_end}

#ifndef NDEBUG
/*
compléter la ligne de commande de génération pour le test unitaire
g++ -o ${name}Ut ${name}.cpp -std=c++11 -D _${name}_UT_ .....
ou
g++ -o ${name}Ut ${name}.cpp -std=c++11 -D _CLASSE_ABSTRAITE_ -D _${name}_UT_ .....

commande de compilation générant le fichier objet

g++ -c ${name}.cpp  -std=c++11 -D NDEBUG 
*/
#include <assert.h>
#ifdef _${name}_UT_
  #ifdef _CLASSE_ABSTRAITE_
    class Test: public ${namespace}::${name}{
      public:
        Test(parametres):${name}(parametres){} 
       //définir toutes les méthodes abstraites (i.e. =0) avec un corps vide
     };
 #endif // _CLASSE_ABSTRAITE_
int main(int argc, char** argv){
  #ifdef _CLASSE_ABSTRAITE_
   ${namespace}::${name}* ptrInstance =new Test(parametres);
  type valeur=?????;
  ptrInstance->setAttr1(valeur);
  assert(ptrInstance->getAttr1() == valeur);
 #else
  //instanciation de la classe à tester
  ${namespace}::${name} instance(parametres);
  //test de chaque méthode ; ici les accesseurs et mutateurs
  type valeur=?????;
  instance.setAttr1(valeur);
  assert(instance.getAttr1() == valeur);
 #endif // _CLASSE_ABSTRAITE_
}
#endif
#endif"
      associated_classes
	class_ref 205955 // BluetoothServer
      end
    end

    artifact 166275 "main"
      stereotype "source"
      cpp_src "int main(int argc, char** argv)
{
	BluetoothServer bluetoothServer(\"60:36:DD:39:22:30\");
	bluetoothServer.launch();
	bluetoothServer.writeData(\"test from serveur\");
	std::string test = bluetoothServer.readData();	
	
	return 0;
}
"
      associated_classes
      end
    end
  end
end
